# Generated by Django 4.1 on 2022-08-31 19:43

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(error_messages={'unique': 'The email has been already registered. Please, sign in using this email'}, help_text='Enter email in format example@gmail.ru', max_length=150, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_email', message='Invalid email', regex="^([A-Za-z0-9]{1}[-!#$%&'*+./=?^_`{}|~A-Za-z0-9]{1,63})@([A-za-z0-9]{1,}\\.){1,2}[A-za-z0-9-]{2,6}$")], verbose_name='Email')),
                ('role', models.CharField(choices=[('Super Admin', 'Super Admin'), ('Administrator', 'Administrator'), ('Manager', 'Manager')], default='Manager', max_length=15, verbose_name='Role')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(code='invalid_name', message='Invalid name', regex='^[А-Яа-я0-9]{,50}$')], verbose_name='Name')),
                ('last_name', models.CharField(blank=True, max_length=100, verbose_name='Surname')),
                ('date_joined', models.DateTimeField(auto_now=True, verbose_name='Date joined')),
                ('image', models.ImageField(blank=True, upload_to='Users/', verbose_name='Photo')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('email_verify', models.BooleanField(default=False)),
                ('last_send_mail', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
    ]
